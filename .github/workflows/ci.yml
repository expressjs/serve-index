name: ci

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'

# Cancel in progress workflows
# in the scenario where we already had a run going for that PR/branch/tag but then triggered a new run
concurrency:
  group: "${{ github.workflow }} âœ¨ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm install --ignore-scripts --only=dev

      - name: Run lint
        run: npm run lint

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        name:
        - Node.js 0.8
        - Node.js 0.10
        - Node.js 0.12
        - Node.js 4.x
        - Node.js 5.x
        - Node.js 6.x
        - Node.js 7.x
        - Node.js 8.x
        - Node.js 9.x
        - Node.js 10.x
        - Node.js 11.x
        - Node.js 12.x
        - Node.js 13.x
        - Node.js 14.x
        - Node.js 15.x
        - Node.js 16.x
        - Node.js 17.x
        - Node.js 18.x
        - Node.js 19.x
        - Node.js 20.x
        - Node.js 21.x
        - Node.js 22.x
        - Node.js 23.x

        include:
        - name: Node.js 0.8
          node-version: "0.8"
          npm-i: mocha@2.5.3 supertest@1.1.0
          npm-rm: nyc

        - name: Node.js 0.10
          node-version: "0.10"
          npm-i: mocha@3.5.3 nyc@10.3.2 supertest@2.0.1
          npm-version: "npm@2.15.1"

        - name: Node.js 0.12
          node-version: "0.12"
          npm-i: mocha@3.5.3 nyc@10.3.2 supertest@2.0.1
          npm-version: "npm@2.15.1"

        - name: Node.js 4.x
          node-version: "4.9"
          npm-i: mocha@5.2.0 nyc@11.9.0 supertest@3.4.2

        - name: Node.js 5.x
          node-version: "5.12"
          npm-i: mocha@5.2.0 nyc@11.9.0 supertest@3.4.2
          npm-version: npm@3.10.10

        - name: Node.js 6.x
          node-version: "6.17"
          npm-i: mocha@6.2.2 nyc@14.1.1 supertest@6.1.3

        - name: Node.js 7.x
          node-version: "7.10"
          npm-i: mocha@6.2.2 nyc@14.1.1 supertest@6.1.3

        - name: Node.js 8.x
          node-version: "8.17"
          npm-i: mocha@7.1.2 nyc@14.1.1 supertest@6.1.3

        - name: Node.js 9.x
          node-version: "9.11"
          npm-i: mocha@7.1.2 nyc@14.1.1 supertest@6.1.3

        - name: Node.js 10.x
          node-version: "10.24"
          npm-i: mocha@8.4.0 supertest@6.1.3

        - name: Node.js 11.x
          node-version: "11.15"
          npm-i: mocha@8.4.0 supertest@6.1.3

        - name: Node.js 12.x
          node-version: "12.22"
          npm-i: mocha@9.2.2 supertest@6.1.3

        - name: Node.js 13.x
          node-version: "13.14"
          npm-i: mocha@9.2.2 supertest@6.1.3

        - name: Node.js 14.x
          node-version: "14.21"
          npm-i: supertest@6.1.3

        - name: Node.js 15.x
          node-version: "15"
          npm-i: supertest@6.1.3

        - name: Node.js 16.x
          node-version: "16"
          npm-i: supertest@6.1.3

        - name: Node.js 17.x
          node-version: "17"
          npm-i: supertest@6.1.3

        - name: Node.js 18.x
          node-version: "18"

        - name: Node.js 19.x
          node-version: "19"

        - name: Node.js 20.x
          node-version: "20"

        - name: Node.js 21.x
          node-version: "21"

        - name: Node.js 22.x
          node-version: "22"

        - name: Node.js 23.x
          node-version: "23"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Setup Node.js ${{ matrix.node-version }}
      if: ${{ matrix.node-version != '0.8' }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup Node.js 0.8
      if: ${{ matrix.node-version == '0.8' && matrix.os == 'ubuntu-latest' }}
      shell: bash -eo pipefail -l {0}
      run: |
        nvm install --default ${{ matrix.node-version }}
        nvm install --alias=npm 0.10
        nvm use ${{ matrix.node-version }}
        if [[ "$(npm -v)" == 1.1.* ]]; then
          nvm exec npm npm install -g npm@1.1
          ln -fs "$(which npm)" "$(dirname "$(nvm which npm)")/npm"
        else
          sed -i '1s;^.*$;'"$(printf '#!%q' "$(nvm which npm)")"';' "$(readlink -f "$(which npm)")"
        fi
        npm config set strict-ssl false
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    - name: Npm version fixes
      if: ${{matrix.npm-version != ''}}
      shell: bash -eo pipefail -l {0}
      run: |
        npm install -g ${{ matrix.npm-version }}

    - name: Configure npm
      shell: bash -eo pipefail -l {0}
      run: |
        npm config set package-lock false

    - name: Remove npm module(s) ${{ matrix.npm-rm }}
      if: matrix.npm-rm != ''
      run: npm rm --silent --save-dev ${{ matrix.npm-rm }}

    - name: Install npm module(s) ${{ matrix.npm-i }}
      if: matrix.npm-i != ''
      run: npm install --save-dev ${{ matrix.npm-i }}

    - name: Setup Node.js version-specific dependencies
      shell: bash
      run: |
        # eslint for linting
        # - remove on Node.js < 12
        if [[ "$(cut -d. -f1 <<< "${{ matrix.node-version }}")" -lt 12 ]]; then
          node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
            grep -E '^eslint(-|$)' | \
            sort -r | \
            xargs -n1 npm rm --silent --save-dev
        fi

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:
        (npm -s ls --depth=0 ||:) | awk -F'[ @]' 'NR>1 && $2 { print $2 "=" $3 }' >> "$GITHUB_OUTPUT"

    - name: Run tests
      shell: bash
      run: |
        if npm -ps ls nyc | grep -q nyc; then
          npm run test-ci
        else
          npm test
        fi

    - name: Collect code coverage
      uses: coverallsapp/github-action@master
      if: steps.list_env.outputs.nyc != ''
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.test_number }}
        parallel: true

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Upload code coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true